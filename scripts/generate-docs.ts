import { readdirSync, writeFileSync, mkdirSync } from 'node:fs'
import { join, extname, basename } from 'node:path'

const docsDir = join(process.cwd(), 'docs') // your docs folder
const outputDir = './src/components/docs' // or specify another folder if you want

mkdirSync(outputDir, { recursive: true })

const files = readdirSync(docsDir)

files.forEach((file) => {
	if (basename(file, '.md') === 'colors') {
		return
	}
	if (extname(file) === '.md') {
		const name = basename(file, '.md')
			.split('_')
			.map((namePart) => namePart)
			.join(' ')

		// Basic MDX wrapper for Storybook
		const mdxContent = `
import { Meta, Title, Subtitle, Markdown } from '@storybook/blocks'

import content from '../../../docs/${file}?raw'

<Meta title="Documentation/${name}" />

{/**
 * --------------------------------------------------------------------
 * THIS FILE IS AUTO-GENERATED — DO NOT EDIT IT DIRECTLY!
 *
 * This file was generated by the generate-docs script.
 * Any manual changes will be overwritten.
 *
 * To update this file, run the appropriate generation script.
 * The script is automatically triggered by the pre-flight script
 * --------------------------------------------------------------------
 */}

<Markdown>{content}</Markdown>
`.trim()

		const mdxFilename = basename(file, '.md') + '.mdx'
		writeFileSync(join(outputDir, mdxFilename), mdxContent)
		console.log(`✅ Generated ${mdxFilename} from ${file}`)
	}
})
