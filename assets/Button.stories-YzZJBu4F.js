import{f as _,w as C,u as q,a as E,e as x}from"./index-B7dDGrsI.js";import{d as D,u as z,b as N,e as P,o as R,t as S,m as M,f as O}from"./vue.esm-bundler-BO0zbG9f.js";const F=["disabled"],h=D({__name:"Button",props:{label:{},size:{},color:{},disabled:{type:Boolean}},emits:["click"],setup(a,{emit:n}){const e=a,s=n,i=z(),v=t=>{e.disabled||s("click",t)},w=N(()=>{const t=["Button"],c=e.color??"grey",B=e.size??"small";return t.push(`Button--${c}`),t.push(`Button--${B}`),t.join(" ")});return(t,c)=>(R(),P("button",M(O(i),{class:w.value,disabled:e.disabled??void 0,onClick:v}),S(e.label),17,F))}}),I=(a,n)=>{const e=a.__vccOpts||a;for(const[s,i]of n)e[s]=i;return e},j=I(h,[["__scopeId","data-v-71aaf97b"]]);h.__docgenInfo={exportName:"default",displayName:"Button",type:1,props:[{name:"label",global:!1,description:"",tags:[],required:!0,type:"string",declarations:[],schema:"string"},{name:"size",global:!1,description:"",tags:[],required:!0,type:"string",declarations:[],schema:"string"},{name:"color",global:!1,description:"",tags:[],required:!0,type:"Color",declarations:[],schema:{kind:"array",type:"Color"}},{name:"disabled",global:!1,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"key",global:!0,description:"",tags:[],required:!1,type:"PropertyKey",declarations:[],schema:{kind:"enum",type:"PropertyKey",schema:["string","number","symbol"]}},{name:"ref",global:!0,description:"",tags:[],required:!1,type:"VNodeRef",declarations:[],schema:{kind:"enum",type:"VNodeRef",schema:["string","Ref<any, any>",{kind:"event",type:"(ref: Element | ComponentPublicInstance<{}, {}, {}, {}, {}, {}, {}, {}, false, ComponentOptionsBase<any, any, any, any, any, any, any, any, any, {}, {}, string, {}, {}, {}, string, ComponentProvideOptions>, ... 4 more ..., any>, refs: Record<...>): void"}]}},{name:"ref_for",global:!0,description:"",tags:[],required:!1,type:"boolean",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}},{name:"ref_key",global:!0,description:"",tags:[],required:!1,type:"string",declarations:[],schema:"string"},{name:"class",global:!0,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"},{name:"style",global:!0,description:"",tags:[],required:!1,type:"unknown",declarations:[],schema:"unknown"}],events:[{name:"click",description:"",tags:[],type:"[event: MouseEvent]",signature:'(event: "click", event: MouseEvent): void',declarations:[],schema:[{kind:"object",type:"MouseEvent"}]}],slots:[],exposed:[{name:"label",type:"string",description:"",declarations:[],schema:"string"},{name:"size",type:"string",description:"",declarations:[],schema:"string"},{name:"color",type:"Color",description:"",declarations:[],schema:{kind:"array",type:"Color"}},{name:"disabled",type:"boolean",description:"",declarations:[],schema:{kind:"enum",type:"boolean",schema:["false","true"]}}],sourceFiles:"/home/runner/work/NeoMateria/NeoMateria/src/components/01-atoms/Button/Button.vue"};const A=["red","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","grey","blueGrey","white","black"],G=["small","medium","large"],V={title:"Atoms/Button",component:j,tags:["autodocs"],argTypes:{label:{control:"text"},size:{control:"select",options:G},disabled:{control:"boolean"},color:{control:"select",options:A}},args:{label:"Click me",size:"medium",disabled:!1,onClick:_()}},o={args:{label:"Default Button"}},r={args:{label:"Disabled Button",disabled:!0}},l={play:async({args:a,canvasElement:n,step:e})=>{const s=C(n);await e("Check click functionality",async()=>{await q.click(s.getByRole("button"))}),await E(()=>x(a.onClick).toHaveBeenCalled())}};var d,p,u;o.parameters={...o.parameters,docs:{...(d=o.parameters)==null?void 0:d.docs,source:{originalSource:`{
  args: {
    label: 'Default Button'
  }
}`,...(u=(p=o.parameters)==null?void 0:p.docs)==null?void 0:u.source}}};var m,y,g;r.parameters={...r.parameters,docs:{...(m=r.parameters)==null?void 0:m.docs,source:{originalSource:`{
  args: {
    label: 'Disabled Button',
    disabled: true
  }
}`,...(g=(y=r.parameters)==null?void 0:y.docs)==null?void 0:g.source}}};var b,f,k;l.parameters={...l.parameters,docs:{...(b=l.parameters)==null?void 0:b.docs,source:{originalSource:`{
  play: async ({
    args,
    canvasElement,
    step
  }) => {
    const canvas = within(canvasElement);
    await step('Check click functionality', async () => {
      await userEvent.click(canvas.getByRole('button'));
    });

    // ðŸ‘‡ Now we can assert that the onSubmit arg was called
    await waitFor(() => expect(args.onClick).toHaveBeenCalled());
  }
}`,...(k=(f=l.parameters)==null?void 0:f.docs)==null?void 0:k.source}}};const $=["Default","Disabled","interaction"];export{o as Default,r as Disabled,$ as __namedExportsOrder,V as default,l as interaction};
