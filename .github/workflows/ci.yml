name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🧱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 📦 Install dependencies
        run: npm ci

      # currently no tests to run
      #- name: 🧪 Run unit tests
      #  run: npm run test:unit

      - name: ✅ Type check
        run: npm run type-check

      - name: 🧹 EsLint
        run: npm run lint:fix

      - name: 👔 StyleLint
        run: npm run stylelint:css

      - name: 🎯 Format check
        run: npm run prettier:check

      - name: 🧱 Build Storybook
        run: npm run build-storybook

  deploy-storybook:
    needs: build-test
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 🧱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧱 Build Storybook
        run: npm run build-storybook

      - name: 🚀 Deploy to GitHub Pages (Release)
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: storybook-static
          destination_dir: .

      - name: 🚀 Deploy to GitHub Pages (Dev)
        if: github.ref == 'refs/heads/develop'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: storybook-static
          destination_dir: dev
          keep_files: true

  publish-npm:
    needs: build-test
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧱 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          registry-url: 'https://registry.npmjs.org'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Check version changed
        id: version-check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Try to get the latest published version from npm
          PUBLISHED_VERSION=$(npm view neo-materia version 2>/dev/null || echo "0.0.0")
          echo "published_version=$PUBLISHED_VERSION" >> $GITHUB_OUTPUT

          if [ "$CURRENT_VERSION" != "$PUBLISHED_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "Version changed from $PUBLISHED_VERSION to $CURRENT_VERSION"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "Version unchanged: $CURRENT_VERSION"
          fi

      - name: 🧱 Build package
        if: steps.version-check.outputs.version_changed == 'true'
        run: npm run build

      - name: 🚀 Publish to npm (stable)
        if: steps.version-check.outputs.version_changed == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: 🧱 Build package (dev)
        if: steps.version-check.outputs.version_changed == 'false'
        run: npm run build

      - name: 🚀 Publish to npm (dev)
        if: steps.version-check.outputs.version_changed == 'false'
        run: |
          # Create a dev version with commit SHA
          DEV_VERSION="${{ steps.version-check.outputs.current_version }}-dev.$(git rev-parse --short HEAD)"
          npm version $DEV_VERSION --no-git-tag-version
          npm publish --tag dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
